工厂模式： 分类属于创建型，使用工厂类创建一个对象。使用者不用关心生产细节。
简单工厂模式：不属于23中设计模式 ，  随着类型的增多，方法或者逻辑判断会越来越庞大。  类中职能太多， 不符合单一职能原则。
工厂方法模式： 把一个静态工厂 打散， 随着类型的增多，有一个工厂接口。所有的工厂都实现该接口中的工厂方法。
抽象工厂模式： 不仅生成一个对象， 并且会对生成的对象进行包装。一系列工作。
即:里面有多个抽象方法，可以对生成出来的对象做各种包装。


建造者模式： 当创建的对象的过程比较复杂，按步骤进行创建，使创建过程模板化。
一把是流式创建。
使用者需要了解创建过程。开源框架中使用的比较多。  SpringAppcontextBuild.java
new SpringAppcontextBuild().setxxxx()
                           .setxxxx()
                           .build();